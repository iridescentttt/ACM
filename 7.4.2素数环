#include <iostream>
using namespace std;
int vis[100000];
int n;
int cycle[100000];
int isprime[1000];
void dfs(int k)
{
	if(k>n)
	{
		for(int i=1;i<=n;i++)cout<<cycle[i]<<" ";
			cout<<endl;
		return;
	}
	int i,j;
	cycle[1]=1;
	for(i=2;i<=n;i++)
	{
		if((!vis[i]&&k!=n&&isprime[cycle[k-1]+i])
			||(!vis[i]&&k==n&&isprime[cycle[k-1]+i]&&isprime[cycle[1]+i]))
		{
			cycle[k]=i;
			vis[i]=1;
			dfs(k+1);
			cycle[k]=0;
			vis[i]=0;
		}
	}

}
int main(int argc, char const *argv[])
{
	cin>>n;
	isprime[0]=isprime[1]=0;
	for(int i=2;i<=1000;i++){vis[i]=0;isprime[i]=1;}
	for(int i=2;i<=1000;i++)if(isprime[i])for(int j=i+i;j<=1000;j+=i)isprime[j]=0;
		dfs(2);
	return 0;
}
